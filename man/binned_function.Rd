% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binned_function.R
\name{binned_function}
\alias{binned_function}
\title{Apply function to bins of a numerical variable defined along a genome}
\usage{
binned_function(bins, numvar, varname, fun, ...)
}
\arguments{
\item{bins}{\code{GRanges} object representing the genomic bins. Typically
obtained by calling \code{tileGenome} with
\code{cut.last.tile.in.chrom=TRUE}. No default.}

\item{numvar}{Named RleList object representing a numerical variable defined
along the genome covered by bins (which is the genome described by
\code{seqinfo(bins)}). No default.}

\item{varname}{Character string indicating the name of the genomic variable.
No default.}

\item{fun}{R function to apply to the numerical variable in each bin.
No default.}

\item{...}{optional arguments to \code{fun}.}
}
\description{
This is a generalization of \code{GenomicRanges::binnedAverage} to allow the
use of any applicable function instead of simply the mean. The interface is
the same with the added argument for the function to use.
}
\examples{
\dontrun{
# Generate 100-bp genome tiles
bins <- GenomicRanges::tileGenome(GenomeInfoDb::seqlengths(gr),
                                  tilewidth=100, cut.last.tile.in.chrom=TRUE)

# Get signal as "RleList"; stored in the "score" metadata column
score <- GenomicRanges::coverage(gr, weight="score")

# Now use the function to get the maximum score in each tile
max_per_bin <- binned_function(bins=bins, numvar=score,
                               varname="binned_score", fun=max)
}
}
